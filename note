Redux
- state management seperti context api
- reducer ~ state
- ada 4 bagian utama: 
    store(menyimpan keseluruhan state),
      import createStore dari redux
      store = createStore(nama reducer) 
    action(deskripsi tindakan yang di lakukan beserta parameternya yang dibawa)
      bentuk dari action adalah function yang me return object { action, payload }
    reducer(tindakatan nyata dari action yang di pilih)
      switch case action.type
      mewakili state yang akan dirubah, dalam 1 aplikasi, bisa lebih dari 1 reducer, cth: userLog, news dll
    dispatch(trigger action)
      bisa dipanggil saat store sudah dibuat

- 1. buat reducer, action
  2. createStore
  3. import provider dari react-redux
  3. bungkus app dengan privider, set props store dengan nilai dari create store
  4. import useSelector dari react-redux di component yang akan akses state
      var = useSelector(state => state.nama_reducer)
  5. import useDispatch dari react-redux di component yang akan merubah state
      dispatch = useDispatch()
      dispatch(nama_actionnya)

- implementasi basic
  import { createStore } from 'redux';
  //actions
  const increment = () => {
    return {
      type: 'INCREMENT'
    }
  }
  //reducers
  const counter = (state = 0, action) => {
    switch(action.type) {
      case 'INCREMENT':
        return state + 1;
    }
  }
  //store
  const store = createStore(counter)
  store.subscribe(() => { console.log(store.getState()) })
  store.dispatch(increment())

Redux For Beginners | React Redux Tutorial: https://www.youtube.com/watch?v=CVpUuw9XSjY&list=PLYjQ_F91Hq2U7WpmJb0L61YiwX0l4n2dh&index=6&t=0s
Redux Crash Course With React: https://www.youtube.com/watch?v=93p3LxR9xfM&list=PLYjQ_F91Hq2U7WpmJb0L61YiwX0l4n2dh&index=5&t=0s
React Context vs Redux - Who wins? : https://www.youtube.com/watch?v=OvM4hIxrqAw&list=PLYjQ_F91Hq2U7WpmJb0L61YiwX0l4n2dh&index=5